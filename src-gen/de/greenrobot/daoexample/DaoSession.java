package de.greenrobot.daoexample;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import de.greenrobot.daoexample.User;
import de.greenrobot.daoexample.Share;
import de.greenrobot.daoexample.Comment;
import de.greenrobot.daoexample.Chat;
import de.greenrobot.daoexample.Message;
import de.greenrobot.daoexample.Friend;

import de.greenrobot.daoexample.UserDao;
import de.greenrobot.daoexample.ShareDao;
import de.greenrobot.daoexample.CommentDao;
import de.greenrobot.daoexample.ChatDao;
import de.greenrobot.daoexample.MessageDao;
import de.greenrobot.daoexample.FriendDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig shareDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig chatDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig friendDaoConfig;

    private final UserDao userDao;
    private final ShareDao shareDao;
    private final CommentDao commentDao;
    private final ChatDao chatDao;
    private final MessageDao messageDao;
    private final FriendDao friendDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        shareDaoConfig = daoConfigMap.get(ShareDao.class).clone();
        shareDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        chatDaoConfig = daoConfigMap.get(ChatDao.class).clone();
        chatDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        shareDao = new ShareDao(shareDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        chatDao = new ChatDao(chatDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Share.class, shareDao);
        registerDao(Comment.class, commentDao);
        registerDao(Chat.class, chatDao);
        registerDao(Message.class, messageDao);
        registerDao(Friend.class, friendDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        shareDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
        chatDaoConfig.getIdentityScope().clear();
        messageDaoConfig.getIdentityScope().clear();
        friendDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ShareDao getShareDao() {
        return shareDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public ChatDao getChatDao() {
        return chatDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

}
